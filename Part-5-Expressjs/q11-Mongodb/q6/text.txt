

1. Find the employee with employee_id 25.
 ans. employee> db.employee.find({employee_id: 25})

2. Find all employees in Department3.
   ans. employee> db.employee.find({department: 'Department3'})

3. List all employees with a salary greater than 55000.
   ans. employee> db.employee.find({salary: {$gt: 55000}})

4. Count the number of employees in Department1.
   ans.  employee> db.employee.countDocuments({department: "Department1"}) = 20

5. Increase the salary of the employee with employee_id 50 by 5000.
   ans.  employee> db.employee.updateOne({employee_id: 50}, {$inc: {salary: 5000}})

6. Find all employees who joined after 2022-01-15.
   ans. employee> db.employee.find({ date_joined: { $gt: "2022-01-15" } })

7. Delete the employee with employee_id 10.
   ans. employee> db.employee.deleteOne({employee_id: 10}) 

8. Find all employees whose last name starts with 'L'.
   ans. employee> db.employee.find({ last_name: { $regex: '^L', $options: 'i' } })

9. Find all employees with no manager (manager_id is None).
   ans. employee> db.employee.find({manager_id: null})

10. Find all employees who are older than 30. 
   ans. employee> db.employee.find({age: {$gt: 30}})

11. Update the department of the employee with employee_id 75 to Department2.
   ans. db.employee.updateOne({employee_id: 75}, {$set: {department: "Department2"}})

12. Find all employees whose email contains 'firstname5'.
   ans. employee> db.employee.find({ email: { $regex: 'firstname5\\b', $options: 'i' } })

13. Find all employees who joined on or before 2022-01-10.
   ans. employee> db.employee.find({date_joined: {$lte: "2022-01-10"}})

14. Retrieve all employees sorted by salary in descending order.
   ans. employee> db.employee.find().sort({salary: -1})

15. Count the number of employees who are in Department4 and have a salary above 52000.
    ans.  employee> db.employee.countDocuments({$and: [{department:"Department4"},{salary:{$gt:52000}}]}) = 20  