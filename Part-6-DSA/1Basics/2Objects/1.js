//-----------------------------------------------------
// let person = {
//   name: "Parth",
//   age: 20,
// };
// console.log(person.name); // read
// person.age = 21; // update
// person.city = "Delhi"; // add
// delete person.name; // delete
// console.log(person);
//-----------------------------------------------------
// Object.keys(), Object.values(), Object.entries()

// let student = { name: "John", marks: 85, grade: "A" };
// for (let key in student) {
//   console.log(key, student[key]);
// }
// console.log(Object.keys(student));   // ["name", "marks", "grade"]
// console.log(Object.values(student)); // ["John", 85, "A"]
// console.log(Object.entries(student)); // [["name","John"], ["marks",85], ["grade","A"]]
//-----------------------------------------------------
//  Count frequency of characters in a string

// function countChars(str) {
//   let count = {};
//   for (let char of str) {
//     count[char] = (count[char] || 0) + 1;
//   }
//   return count;
// }
// console.log(countChars("hello"));
//-----------------------------------------------------
//  Finding duplicates

// function findDuplicates(arr) {
//   let count = {};
//   let duplicates = [];
//   for (let num of arr) {
//     count[num] = (count[num] || 0) + 1;
//   }
//   for (let key in count) {
//     if (count[key] > 1) {
//       duplicates.push(Number(key));
//     }
//   }
//   return duplicates;
// }
// console.log(findDuplicates([1, 2, 2, 3, 3, 4]));
//-----------------------------------------------------
// let obj = {
//   title: "Harry Potter",
//   author: "J.K Rowling",
//   year: 1997,
// };
// console.log(obj.title);
// console.log(obj.author);
// console.log(obj.year);
// obj.publisher = "Bloomsbury";
// obj.year = 1998;
// delete obj.publisher;
// console.log(obj);
//-----------------------------------------------------
// let car = {
//   brand: "Toyota",
//   model: "Camry",
//   year: 2020,
// };
// console.log(car["brand"]);
// car["fuel type"] = "Petrol";
// console.log(car);
// for (let key in car) {
//   console.log(key, "**",car[key]);
// }
//-----------------------------------------------------
// Count Letters

// function countLetters(str) {
//   let obj = {};
//   for (let char of str) {
//     obj[char] = (obj[char] || 0) + 1;
//   }
//   return obj;
// }
// console.log(countLetters("hello"));
//-----------------------------------------------------
// function countWords(str) {
//   let words = str.split(" ");
//   let obj = {};
//   for (let word of words) {
//     obj[word] = (obj[word] || 0) + 1;
//   }
//   return obj;
// }
// console.log(countWords("this is a test this is easy"));
//-----------------------------------------------------
// function countNumbers(arr) {
//   let obj = {};
//   for (let num of arr) {
//     obj[num] = (obj[num] || 0) + 1;
//   }
//   return obj;
// }
// console.log(countNumbers([1, 2, 2, 3, 3, 3, 4]));
//-----------------------------------------------------
// function findDuplicates(arr) {
//   let obj = {};
//   for (let n of arr) {
//     obj[n] = (obj[n] || 0) + 1;
//   }
//   let arr2 = [];
//   for (let key in obj) {
//     if (obj[key] > 1) {
//       arr2.push(Number(key));
//     }
//   }
//   return arr2;
// }
// console.log(findDuplicates([1, 2, 2, 3, 3, 3, 4, 5]));
//-----------------------------------------------------
// Check if Two Strings Are Anagrams

// function isAnagram(str1, str2) {
//   if (str1.length !== str2.length) return false;

//   let obj = {};
//   for (let char of str1) {
//     obj[char] = (obj[char] || 0) + 1;
//     // console.log(char)
//   }

//   for (let char of str2) {
//     if (!obj[char]) {
//       return false; // this char in str2 is not in str1, or count
//     }
//     obj[char]--; // decrease the count
//   }
//   return true; // All counts matched
// }
// console.log(isAnagram("listen", "silent")); // true
// console.log(isAnagram("hello", "world")); // false
//-----------------------------------------------------
// Check if Two Arrays Have the Same Frequency

// function sameFrequency(arr1, arr2) {
//   if (arr1.length !== arr2.length) {
//     return false;
//   }
//   let obj = {};
//   for (let char of arr1) {
//     obj[char] = (obj[char] || 0) + 1;
//   }

//   for (let char of arr2) {
//     if (!obj[char]) {
//       return false;
//     }
//     obj[char]--;
//   }

//   return true;
// }
// console.log(sameFrequency([1, 2, 3, 2], [2, 1, 2, 3]));
// console.log(sameFrequency([1, 2, 3], [1, 1, 2, 3]));
//-----------------------------------------------------
// Same Frequency Squared

// function sameSquareFrequency(arr1, arr2) {
//   if (arr1.length !== arr2.length) {
//     return false;
//   }

//   let obj1 = {};
//   for (let char of arr1) {
//     obj1[char] = (obj1[char] || 0) + 1;
//   }

//   let obj2 = {};
//   for (let char of arr2) {
//     obj2[char] = (obj2[char] || 0) + 1;
//   }

//   for (let key in obj1) {
//     let squared = key * key;
//     if (!obj2[squared] || obj2[squared] !== obj1[key]) {
//       return false;
//     }
//   }
//   return true;
// }
// console.log(sameSquareFrequency([1, 2, 3], [1, 4, 9]));
// console.log(sameSquareFrequency([1, 2, 2], [1, 4, 4]));
// console.log(sameSquareFrequency([1, 2, 2], [4, 1, 2]));
// console.log(sameSquareFrequency([1, 2, 3], [1, 9, 9]));
//-----------------------------------------------------
// Group Elements by Frequency

function groupByFrequency(arr) {
  let obj1 = {};
  for (let char of arr) {
    obj1[char] = (obj1[char] || 0) + 1;
  }

  let result = {};
  for (let num in obj1) {
    let count = obj1[num];
    if (!result[count]) {
      result[count] = [];
    }
    result[count].push(Number(num)); // num is a string key, so convert to number
  }

  return result;
}

console.log(groupByFrequency([1, 2, 2, 3, 3, 3, 4]));

//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
//-----------------------------------------------------
